CLASS XJCD INHERIT cde2jan

METHOD ALTERAR  
SELF:oSFJcdi:VIEWFORM()

METHOD ANTERIOR 
SELF:oSFJcdi:Browser:SuspendUpdate()
SELF:oSFJcdi:SkipPrevious()
IF SELF:oSFJcdi:Server:bof
	SELF:oSFJcdi:Skipnext()
ENDIF
SELF:oSFJcdi:Browser:RestoreUpdate()

METHOD APPEND() 
LOCAL oBUSCA AS XBUSCA
LOCAL nCD AS DWORD
LOCAL aDAD,aERRO AS ARRAY
LOCAL oSERVER AS USEREDE
oBUSCA:=XBUSCA{SELF,"Incluir Nova Cond.Desenvolvimento","Digite Nº Crontole PCP"}
oBUSCA:lMES:=.T.
oBUSCA:SHOW()
IF ! oBUSCA:lOK
   alert("Busca Invalida","Erro")	
   RETURN .F.
ENDIF	
nCD:=Val(oBUSCA:cBUSCA)
IF nCD=0
   alert("CD/OS Nao pode ser 0","Erro")	
   RETURN .F.
ENDIF	
SELF:SERVER:SETORDER(1)
SELF:SERVER:GOTOP()
IF SELF:SERVER:SEEK(Str(NCD,8)) //Chave
   alert("CD/OS Ja Cadastrada","Erro")		
   RETURN .F.
ENDIF	


IF cREQUEROP="SIM"
   aDAD:={zCURINI,"OSCRT.DBF",zCURDIR}
   oSERVER:=USEREDE{aDAD}
   IF oSERVER:nERRO#0
      RETU SELF
   ENDIF
   oSERVER:GOTOP()
   IF ! oSERVER:SEEK(nCD)
      alert("OS Não Cadastrada PCP","Erro")			
      oSERVER:CLOSE()	
      RETU SELF
   ENDIF
ENDIF




SELF:SERVER:SUSPENDNOTIFICATION()
SUPER:append()
SELF:SERVER:FIELDPUT("CD",nCD)
SELF:SERVER:FIELDPUT("DATA",Today())
SELF:SERVER:FIELDPUT("CHAVE",Str(NCD,8))

IF cREQUEROP="SIM"
   //Trazendo Dados OS
   SELF:SERVER:FIELDPUT("CLIENTE",oSERVER:FIELDGET("CLIENTE"))
   SELF:SERVER:FIELDPUT("PECA",oSERVER:FIELDGET("CODIGO"))
   oSERVER:CLOSE()
   //
ENDIF

SELF:SERVER:commit()
SELF:PEGMS01()
aDAD:=PEGMA01(SELF:SERVER:CLIENTE,ZCURINI,ZCURDIR)
IF aDAD[1]=.T.
   SELF:SERVER:CLINOME:=aDAD[2]
   SELF:SERVER:CLICOGN:=aDAD[3]
ENDIF
SELF:SERVER:resetnotification()
SELF:SERVER:notify(notifyappend)


aERRO:={}
AAdd(aERRO," Condiçao de Desenvolvimento No:"+StrTRIM(nCD,8,0))
AAdd(aERRO,"Aberta: "+DToC(Today()))
EMAILINT("CD000001",ZUSER,aERRO,ZCURINI,zCURDIR)	


RETURN  .T.


METHOD BUSCAov( ) 
SELF:KEYFIND()

METHOD buscaov1( ) 
	LOCAL oBUSCA AS xBUSCA
oBUSCA:=xBUSCA{SELF,"Localizar CD","Digite Nº CD"}
oBUSCA:lMES:=.T.
oBUSCA:SHOW()
IF oBUSCA:lOK
   SELF:SERVER:SETORDER(1)
   SELF:SERVER:GOTOP()
   SELF:SERVER:SEEK(Str(Val(oBUSCA:cBUSCA),8))
ENDIF

METHOD chkclipro( ) 
LOCAL aCLI AS ARRAY	
LOCAL OPROGWIN AS PROGWIN
alert("Operacao Pode Demorar conf Qtde CD")	
oPROGWIN:=PROGWIN{SELF}
oPROGWIN:SHOW()	
oPROGWIN:NTOTAL:=SELF:SERVER:RECCOUNT
oPROGWIN:reset()
SELF:SERVER:GOTOP()
WHILE ! SELF:SERVER:EOF
   IF Empty(SELF:SERVER:FIELDGET("CLINOME")) .OR. Empty(SELF:SERVER:FIELDGET("CLICOGN")) .OR. Empty(SELF:SERVER:FIELDGET("CODCLI"))		
      aCLI:=PEGMA01(SELF:SERVER:CLIENTE,ZCURINI,ZCURDIR)
      IF aCLI[1]=.T.
         SELF:SERVER:CLINOME:=aCLI[2]
         SELF:SERVER:CLICOGN:=aCLI[3]
         SELF:SERVER:FIELDPUTZ("CODCLI",aCLI[6])
      ENDIF	
   ENDIF
   IF Empty(SELF:SERVER:FIELDGET("NOME")) .OR. Empty(SELF:SERVER:FIELDGET("CODIGOINT"))		
      SELF:PEGMS01()
   ENDIF
   SELF:SERVER:SKIP()
   oPROGWIN:SKIP(1)
ENDDO	
SELF:SERVER:GOTOP()
oprogwin:EndDialog()
alert("Checagem Concluida")


METHOD cmddelfiltro() 
   SELF:xcmddelfiltro()	
  SELF:Browser:REFRESH()

METHOD CMDFILTRAR() 
	SELF:xCMDFILTRAR()
	SELF:Browser:REFRESH()

METHOD CMDimprimir( ) 
SELF:XWRPTGRP("V1","COND")	


METHOD DELETE() 
LOCAL aERRO AS ARRAY
IF ! MDG("Apagar Registro") .AND. SELF:SERVER:LockCurrentRecord()
	RETU SELF
ENDIF	
aERRO:={}
AAdd(aERRO," Condição de Desenvolvimento No:"+StrTRIM(SELF:server:FIELDGET("CD"),8,0)+SELF:SERVER:FIELDGET("DIGCTR"))
AAdd(aERRO,"Excluida: "+DToC(Today()))
EMAILINT("CD000003",ZUSER,aERRO,ZCURINI,zCURDIR)	

SELF:oSFJcdi:SERVER:SUSPENDNOTIFICATION()
SELF:oSFJcdi:server:GOTOP()	
WHILE ! oSFJcdi:server:EOF
 	SELF:oSFJcdi:server:delete()
 	SELF:oSFJcdi:server:SKIP()
ENDDO	
SELF:server:delete()
SELF:server:unlock()
SELF:server:skipEX(-1)
SELF:oSFJcdi:SERVER:resetnotification()
SELF:oSFJcdi:SERVER:notify(notifyfilechange)	

METHOD Dup() 
	SELF:Duplicar(1)

METHOD Duplicar(nTIPO) 
LOCAL nCD AS DWORD
LOCAL nFIELD,J,K     AS WORD
LOCAL nDIGCTR AS DWORD
LOCAL aITENS,aTMP,aDADOS,aERRO AS ARRAY
LOCAL cDIGCTR AS STRING

nFIELD:=SELF:SERVER:FCOUNT
nCD:=SELF:Server:FIELDGET("CD")
cDIGCTR:=SELF:Server:FIELDGET("DIGCTR")
aDADOS:={}
FOR J:=1 TO nFIELD
    AAdd(aDADOS,SELF:SERVER:FIELDGET(J))
NEXT J
aITENS:={}
nFIELD:=SELF:oSFJCDI:server:FCOUNT
SELF:oSFJCDI:server:GOTOP()
WHILE ! oSFJCDI:server:EOF
    aTMP:={}
    FOR J:=1 TO nFIELD
       AAdd(aTMP,SELF:oSFJCDI:server:FIELDGET(J))
    NEXT J
    AAdd(aITENS,aTMP)
   SELF:oSFJCDI:server:SKIP()
ENDDO
IF nTIPO=2
   nCD:=SELF:Server:CD	
   SELF:server:setorder(1)
   WHILE nCD=SELF:SERVER:FIELDGET("CD") .AND. ! SELF:SERVER:EOF
       SELF:server:FIELDPUT("ATUAL",.F.)
       cDIGCTR:=SELF:SERVER:FIELDGET("DIGCTR")
       SELF:SERVER:SKIP()
   ENDDO
   IF Empty(cDIGCTR)
   	  cDIGCTR:="A"
   ELSE
      nDIGCTR:=Asc(cDIGCTR)	
      cDIGCTR:=Chr(nDIGCTR+1)
   ENDIF	
ELSE	
   SELF:server:setorder(1)
   SELF:server:gobottom()
   nCD:=SELF:Server:CD
   nCD++
   cDIGCTR:=" "
ENDIF
SUPER:SERVER:APPEND()
nFIELD:=SELF:SERVER:FCOUNT
FOR J:=1 TO nFIELD
    SELF:SERVER:FIELDPUT(J,aDADOS[J])
NEXT J
SELF:SERVER:FIELDPUT("CD",nCD)
SELF:SERVER:FIELDPUT("DIGCTR",cDIGCTR)
SELF:SERVER:FIELDPUT("CHAVE",Str(ncd,8)+cDIGCTR)
SELF:SERVER:FIELDPUT("ATUAL",.T.)
SELF:SERVER:FIELDPUT("FUNNUM",0)
SELF:SERVER:FIELDPUT("FUNNOM","")
SELF:SERVER:FIELDPUT("DATAeMI",CToD(Space(8)))
nFIELD:=SELF:oSFJCDI:server:FCOUNT
FOR K:=1 TO ALen(aITENS)
    SELF:oSFJCDI:server:APPEND()
    FOR J:=1 TO nFIELD
        SELF:oSFJCDI:server:FIELDPUT(J,aITENS[K][J])
    NEXT J
    SELF:oSFJCDI:server:FIELDPUT("CD",nCD)
    SELF:oSFJCDI:server:FIELDPUT("DIGCTR",cDIGCTR)
    SELF:oSFJCDI:server:FIELDPUT("CHAVE",Str(nCD,8)+cDIGCTR)
NEXT K
SELF:server:gotop()
SELF:server:gobottom()
IF nTIPO=2
   SELF:server:SEEK(Str(ncd,8)+cDIGCTR)	
ENDIF	

aERRO:={}
AAdd(aERRO," Condiçao de Desenvolvimento No:"+StrTRIM(nCD,8,0)+"-"+cDIGCTR)
AAdd(aERRO," Aberta Nova Revisao: "+DToC(Today()))
EMAILINT("CD000001",ZUSER,aERRO,ZCURINI,zCURDIR)	
RETURN  .T.

METHOD esccod( ) 
LOCAL oESC AS XESCCOD	
oESC:=XESCCOD{SELF,"MS01.DBF"}
oESC:SHOW()	
IF Oesc:lok
    SELF:SERVER:FIELDPUT("PECA",oESC:CODIGO)
    SELF:SERVER:FIELDPUT("NOME",oESC:NOME)
ENDIF			

METHOD esccod1( ) 
LOCAL nVIA,nREG AS DWORD
LOCAL oBUSCA AS XBUSCA
oBUSCA:=XBUSCA{SELF,"Atribuindo Viabilidade","Digite Nº Viabilidade","0"}
oBUSCA:SHOW()
IF ! oBUSCA:lOK
   RETU .F.	
ENDIF	
nVIA:=Val(oBUSCA:cBUSCA)
IF nVIA<1
   alert("Viabilidade Precisa ser >0")	
   RETU .F.
ENDIF	
nREG:=SELF:SERVER:RECNO
SELF:server:setorder(5)
SELF:server:gotop()
IF SELF:server:seek(nVIA)
   alert("Viabilidade ja em outra CD")
   SELF:SERVER:SETORDER(1)
   SELF:SERVER:GOTO(nREG)
   RETU .F.
ENDIF
SELF:SERVER:SETORDER(1)
SELF:SERVER:GOTO(nREG)
SELF:SERVER:FIELDPUT("VIABILI",nVIA)
RETU .T.

METHOD EXCLUIR 
IF ! MDG("Apagar Registro") .AND. SELF:oSFJCDI:server:LockCurrentRecord()
	RETU SELF
ENDIF	
SELF:oSFJCDI:server:delete()
SELF:oSFJCDI:server:unlock()
SELF:oSFJCDI:server:skip(-1)
IF SELF:oSFJCDI:server:BOF
   SELF:oSFJCDI:server:GOTOP()
ENDIF

METHOD foto( ) 
LOCAL oFOTOVIEW AS fotoview	
LOCAL cCODIGO AS STRING
cCODIGO:=TIRAOUT(StrTran(AllTrim(SELF:SERVER:FIELDGET("PECA"))," ",""))
IF Empty(cCODIGO)	
   alert("Codigo Produto Nao Preenchido")	
   RETURN .F.
ENDIF	
OFOTOVIEW:=fotoview{SELF,ZDIRFOTO+cCODIGO+".JPG",cCODIGO}
OFOTOVIEW:SHOW()
	

CONSTRUCTOR(oOWNER) 
LOCAL oSERVER,oSERVE2 AS USEREDE
LOCAL aDAD AS ARRAY
IF ! entramenu("VIA",8)
	RETU SELF
ENDIF	
cREQUEROP:=PEGINIVAL(ZCURINI,"VIABILI","CDREQUEROS")
aDAD:={zCURINI,"CD.DBF",zCURDIR}
oSERVER:=USEREDE{aDAD}
IF oSERVER:nERRO#0
    RETU SELF
ENDIF
aDAD:={zCURINI,"CDI.DBF",zCURDIR}
oSERVE2:=USEREDE{aDAD}
IF oSERVE2:nERRO#0
	oSERVER:Close() //Fecha Master
   RETU SELF
ENDIF
SUPER(oOWNER,,oSERVER)
SELF:Browser:SetStandardStyle(gBsreadonly)
SELF:OSFJCDI:USE(oSERVE2)
SELF:SetSelectiveRelation(oSFJCDI,"CHAVE")
SELF:oSFJCDI:VIEWTABLE()
IF CREQUEROP="SIM"
   SELF:oDCPECA:DISABLE()
   SELF:oCCesccod:DISABLE()
ENDIF
SELF:SHOW()	
	

METHOD NovaRev( ) 
    SELF:Duplicar(2)	
	
	

METHOD NovaRev1( ) 
	    SELF:Duplicar(1)	

METHOD NOVO 
SELF:oSFJCDI:SERVER:SUSPENDNOTIFICATION()
SELF:oSFJCDI:SERVER:APPEND()
SELF:oSFJCDI:SERVER:CD:=SELF:SERVER:CD
SELF:oSFJCDI:SERVER:DIGCTR:=SELF:SERVER:DIGCTR
SELF:oSFJCDI:SERVER:CHAVE:=SELF:SERVER:CHAVE
SELF:oSFJCDI:SERVER:commit()
SELF:oSFJCDI:SERVER:resetnotification()
SELF:oSFJCDI:SERVER:notify(notifyappend) //Contas do Livro

METHOD PEGMS01( ) 
LOCAL aPRO AS ARRAY
LOCAL cCODIGO AS STRING
cCODIGO:=AllTrim(SELF:SERVER:FIELDGET("PECA"))
IF ! Empty(Ccodigo)
   aPRO:=PEGMSEXT(cCODIGO,.T.)	
   IF aPRO[1]
      SELF:SERVER:FIELDPUTZ("NOME",APRO[2])
      SELF:SERVER:FIELDPUTZ("CODIGOINT",aPRO[7])
   ENDIF
ENDIF

METHOD porov( ) 
SELF:KeyFind()

METHOD PostInit() 
   SELF:RegisterTimer(300,FALSE)
   	   FabCenterWindow( SELF )
 RETURN SELF

METHOD PROXIMO 
SELF:oSFJcdi:Browser:SuspendUpdate()
SELF:oSFJcdi:SkipNext()
IF SELF:oSFJcdi:Server:Eof
	SELF:oSFJcdi:SkipPrevious()
ENDIF
SELF:oSFJcdi:Browser:RestoreUpdate()

METHOD TABULAR  	
SELF:oSFJCDI:VIEWTABLE()

METHOD Timer() 
   SELF:SERVER:COMMIT()
   SELF:oSFjcdi:serveR:Commit()



END CLASS
