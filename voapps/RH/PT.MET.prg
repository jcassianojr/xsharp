PARTIAL CLASS JPT
METHOD ANTERIOR 
SELF:oSFJPTI:Browser:SuspendUpdate()
IF SELF:oSFJPTI:Server:bof
   SELF:oSFJPTI:SkipPrevious()
ENDIF
SELF:oSFJPTI:Browser:RestoreUpdate()

METHOD APPEND() 
LOCAL nTRE AS DWORD
LOCAL aRESP AS ARRAY
SELF:server:setorder(1)
SELF:server:gobottom()
nTRE:=SELF:Server:TREIN
nTRE++
SELF:SERVER:SUSPENDNOTIFICATION()
SUPER:append()
SELF:SERVER:FIELDPUT("TREIN",nTRE)
SELF:SERVER:FIELDPUT("AREA","RH")
aRESP:=PEGMP05("RH",ZCURINI,ZCURDIR)
IF aRESP[1]=.T.
    SELF:SERVER:FIELDPUT("RESPO",aRESP[2])
ENDIF
SELF:SERVER:FIELDPUT("DATA",Today())
SELF:SERVER:commit()
SELF:SERVER:resetnotification()
SELF:SERVER:notify(notifyappend)
RETURN   .t.

METHOD buscacurso( ) 
LOCAL oBUSCA AS xBUSCA
oBUSCA:=xBUSCA{SELF,"Localizar","Digite o Curso"}
oBUSCA:lMES:=.T.
oBUSCA:SHOW()
IF oBUSCA:lOK
   SELF:SERVER:SETORDER(2)
   SELF:SERVER:GOTOP()
   SELF:SERVER:SEEK(oBUSCA:cBUSCA)
ENDIF	

METHOD BuscaFUN( ) 
SELF:oSFJTREINF:SERVER:GOTOP()
SELF:oSFJTREINF:SERVER:SEEK(AllTrim(SELF:CNOME))
IF SELF:oSFJTREINF:SERVER:EOF
   SELF:oSFJTREINF:GOTOP()
ENDIF	
	

METHOD buscanumero( ) 
SELF:KeyFind()

METHOD cmdAPR( ) 
SELF:server:FIELDPUT("Aprovada",SIMNAO(SELF:SERVER:FIELDGET("aprovada"),{"S","N","A","C"," "}))	

METHOD cmddelfiltro() 
   SELF:xcmddelfiltro()	
  SELF:Browser:REFRESH()

METHOD CMDFILTRAR() 
	SELF:xCMDFILTRAR()
	SELF:Browser:REFRESH()

METHOD CMDimprimir( ) 
SELF:XWRPTGRP("RH","PRG")	


METHOD DELETE() 
IF  MDG("Apagar Registro") .AND. SELF:SERVER:LOCKcurrentrecord()
   SELF:oSFJPTI:SERVER:SUSPENDNOTIFICATION()
	SELF:oSFJPTI:SERVER:gotop()
   WHILE ! SELF:oSFJPTI:SERVER:eof
	 	SELF:oSFJPTI:SERVER:delete()
	 	SELF:oSFJPTI:SERVER:skip()	
      ENDDO
	SELF:oSFJPTI:SERVER:resetnotification()
	SELF:oSFJPTI:SERVER:notify(notifyfilechange)
	SELF:server:delete()
	SELF:server:unlock()
	IF ! SELF:SERVER:BOF
	   SELF:SERVER:Skip(-1)
	ENDIF
ENDIF	

METHOD Duplicar() 
LOCAL nTREIN AS DWORD
LOCAL nFIELD,J,K AS WORD
LOCAL aITENS,aTMP,aDADOS,aDAD,aCOM AS ARRAY
LOCAL oTREII AS USEREDE

nFIELD:=SELF:SERVER:FCOUNT
nTREIN:=SELF:Server:FIELDGET("TREIN")
aDADOS:={}
FOR J:=1 TO nFIELD
    AAdd(aDADOS,SELF:SERVER:FIELDGET(J))
NEXT J
aITENS:={}
aDAD:={zCURINI,"TREII",zCURDIR}
aCOM:={zMES,zANO,ZEMPRESA}
//Init(aDAD, lShareMode, lReadOnlyMode, cDriver, aCOM)
oTREII:=USEREDE{aDAD,,,,aCOM}
IF oTREII:nERRO=0
     nFIELD:=oTREII:FCOUNT
     oTREII:GOTOP()
     oTREII:SEEK(nTREIN)
     WHILE oTREII:FIELDGET("TREIN")=nTREIN .AND. ! oTREII:EOF
          aTMP:={}
  	      FOR J:=1 TO nFIELD
	          AAdd(aTMP,oTREII:FIELDGET(J))
          NEXT J
          AAdd(aITENS,aTMP)
          oTREII:SKIP()
    ENDDO
ENDIF
SELF:server:setorder(1)
SELF:server:gobottom()
nTREIN:=SELF:Server:TREIN
nTREIN++
SUPER:SERVER:APPEND()
nFIELD:=SELF:SERVER:FCOUNT
FOR J:=1 TO nFIELD
    SELF:SERVER:FIELDPUT(J,aDADOS[J])
NEXT J
SELF:SERVER:FIELDPUT("TREIN",nTREIN)
IF oTREII:USED
     nFIELD:=oTREII:FCOUNT
     FOR K:=1 TO ALen(aITENS)
         oTREII:APPEND()
   	     FOR J:=1 TO nFIELD
             oTREII:FIELDPUT(J,aITENS[K][J])
         NEXT J
         oTREII:FIELDPUT("TREIN",nTREIN)
     NEXT K
     oTREII:CLOSE()
ENDIF
SELF:server:gotop()
SELF:server:gobottom()
RETURN .t.

METHOD EditFocusChange(oEditFocusChangeEvent) 
	LOCAL oControl AS Control
//	LOCAL lGotFocus AS LOGIC
	oControl := IIf(oEditFocusChangeEvent == NULL_OBJECT, NULL_OBJECT, oEditFocusChangeEvent:Control)
	 IIf(oEditFocusChangeEvent == NULL_OBJECT, FALSE, oEditFocusChangeEvent:GotFocus)  //lGotFocus := 
	SUPER:EditFocusChange(oEditFocusChangeEvent)
	//Put your changes here
	 	DO CASE
      CASE oCONTROL:NAMESYM==#PRINI
           IF ! Empty(SELF:SERVER:PRINI)
           	  SELF:SERVER:ANO:=Year(SELF:SERVER:PRINI)
           	  SELF:SERVER:MES:=Month(SELF:SERVER:PRINI)
           ENDIF	

	ENDCASE

	RETURN NIL

METHOD ESCCUR 
LOCAL oJAN AS XESCCUR
LOCAL aDAD AS ARRAY
oJAN:=XESCCUR{SELF,ZCURINI,ZCURDIR,"CURSO.DBF"}
oJAN:SHOW()
IF oJAN:lOK
   SELF:SERVER:FIELDPUT("CURSO",AllTrim(oJAN:CODIGO))
   aDAD:=PEGCUR(SELF:SERVER:CURSO)
   IF aDAD[1]=.T.
      SELF:SERVER:DESCUR:=aDAD[2]
      SELF:SERVER:CERT:=aDAD[3]
      IF Empty(SELF:SERVER:TIPCUR)
         SELF:SERVER:TIPCUR:=aDAD[5]
      ENDIF
   ENDIF
ENDIF

METHOD escESC( ) 
LOCAL oESC AS XESCNUM	
oESC:=XESCNUM{SELF,"CUREMP.DBF"}
oESC:SHOW()	
IF Oesc:lok
    SELF:SERVER:FIELDPUT("NESCOLA",oESC:NUMERO)
    SELF:SERVER:FIELDPUT("INSTRU",oESC:NOME)
ENDIF	
	


METHOD ESCINS 
SELF:SERVER:FIELDPUT("NINSTU",SELF:oSFJTREINF:SERVER:FIELDGET("TECNICO"))
SELF:SERVER:FIELDPUT("INSTRU",SELF:oSFJTREINF:SERVER:FIELDGET("NOMTEC"))

METHOD Escins1( ) 
SELF:SERVER:FIELDPUT("NUMSOL",SELF:oSFJTREINF:SERVER:FIELDGET("TECNICO"))
SELF:SERVER:FIELDPUT("NOMSOL",SELF:oSFJTREINF:SERVER:FIELDGET("NOMTEC"))

METHOD Esco( ) 
LOCAL oERRO AS ERRORBOX
LOCAL dDATA,dDEM AS DATE
IF ! MDG("Escolher Todos os Ativos","Confirme Procedimento")
   RETURN .f.
ENDIF	
dDATA:=SELF:SERVER:FIELDGET("DATACUR")
IF Empty(dDATA)
   oERRO:=ERRORBOX{SELF,"Falta Data Inicial do Curso"}
   oERRO:SHOW()		
   RETURN  .f.
ENDIF	
SELF:oSFJTREINF:SERVER:gotop()
WHILE ! SELF:oSFJTREINF:SERVER:EOF
   IF dDATA>=SELF:oSFJTREINF:SERVER:FIELDGET("ADMITIDO")
   	  dDEM:=SELF:oSFJTREINF:SERVER:FIELDGET("DEMITIDO")
 	  IF Empty(dDEM) .or. dDATA<=dDEM
         SELF:NFUNC:=SELF:oSFJTREINF:SERVER:FIELDGET("TECNICO")
         SELF:NOVO()	
      ENDIF
   ENDIF
   SELF:oSFJTREINF:SERVER:SKIP()	
ENDDO	
	

METHOD ESCOLHER 
SELF:NFUNC:=SELF:oSFJTREINF:SERVER:FIELDGET("TECNICO")
SELF:NOVO()

METHOD escres( ) 
LOCAL oESCMP04 AS XESCMP04
oESCMP04:=XESCMP04{SELF}
IF oESCMP04:LOK
   SELF:SERVER:FIELDPUT("NINSTU",oESCMP04:NUMERO)
   SELF:SERVER:FIELDPUT("INSTRU",oESCMP04:NOME)
ENDIF

METHOD ESCSOL( ) 
LOCAL oESCMP04 AS XESCMP04
oESCMP04:=XESCMP04{SELF}
IF oESCMP04:LOK
   SELF:SERVER:FIELDPUT("NUMSOL",oESCMP04:NUMERO)
   SELF:SERVER:FIELDPUT("NOMSOL",oESCMP04:NOME)
ENDIF	

METHOD EXCLUIR 	
IF  MDG("Apagar Registro") .AND. SELF:oSFJPTI:server:LockCurrentRecord()
    SELF:oSFJPTI:SERVER:SUSPENDNOTIFICATION()	
    SELF:oSFJPTI:server:delete()
    SELF:oSFJPTI:server:unlock()
	SELF:oSFJPTI:SERVER:resetnotification()
	SELF:oSFJPTI:SERVER:notify(notifyappend)
	IF SELF:server:PARTI>0
       SELF:SERVER:PARTI:=(SELF:SERVER:PARTI)-1
    ENDIF
    SELF:oSFJPTI:server:GOTOP()		
	WHILE ! SELF:oSFJPTI:serveR:EOf
		SELF:oSFJPTI:server:Skip()
    ENDDO		
    SELF:oSFJPTI:server:GOTOP()
ENDIF	


METHOD ListBoxSelect( oControlEvent ) 
	LOCAL oControl AS Control
	LOCAL aRESP AS ARRAY
	oControl := IIf( oControlEvent == NULL_OBJECT, NULL_OBJECT, oControlEvent:Control )
	SUPER:ListBoxSelect( oControlEvent )
	//Put your changes here
    DO CASE
       CASE oCONTROL:NAMESYM==#AREA
            aRESP:=PEGMP05(SELF:SERVER:AREA,ZCURINI,ZCURDIR)
            IF aRESP[1]=.T.
               SELF:SERVER:RESPO:=aRESP[2]
            ENDIF
	ENDCASE
RETURN NIL

METHOD NOVO(oOWNER) 
LOCAL nTREIN AS DWORD
LOCAL aTEC AS ARRAY
LOCAL Oerro AS errorbox
nTREIN:=SELF:SERVER:TREIN
IF SELF:NFUNC=0
     Oerro:=ERRORBOX{oOWNER,"Codigo Funcionarios em Branco"}
     Oerro:show()
     RETU NIL
ENDIF
aTEC:=PEGMP04(SELF:NFUNC,ZCURINI,ZCURDIR,{zMES,zANO,ZEMPRESA})
IF aTEC[1]=.F.
   Oerro:=ERRORBOX{oOWNER,"Funcionarios nao cadastrado"}
   Oerro:show()
   RETU NIL
ENDIF
SELF:oSFJPTI:SERVER:SUSPENDNOTIFICATION()
SELF:oSFJPTI:SERVER:APPEND()
SELF:oSFJPTI:SERVER:TREIN:=nTREIN
SELF:oSFJPTI:SERVER:NUMFUN:=SELF:NFUNC
SELF:oSFJPTI:SERVER:NOMFUN:=aTEC[2]
SELF:oSFJPTI:SERVER:commit()
SELF:oSFJPTI:SERVER:resetnotification()
SELF:oSFJPTI:SERVER:notify(notifyappend) //Contas do Livro
SELF:SERVER:PARTI:=(SELF:SERVER:PARTI)+1
SELF:oDCNFUNC:SetFocus()

METHOD pegcurdes( ) 
LOCAL Adad AS ARRAY	
   aDAD:=PEGCUR(SELF:SERVER:CURSO)
   IF aDAD[1]=.T.
      SELF:SERVER:DESCUR:=aDAD[2]
      SELF:SERVER:CERT:=aDAD[3]
      IF Empty(SELF:SERVER:TIPCUR)
         SELF:SERVER:TIPCUR:=aDAD[5]
      ENDIF
   ENDIF	

METHOD btnPEGESC( ) 
LOCAL aTEC AS ARRAY	
aTEC:=PEGESC(SELF:SERVER:FIELDGET("NESCOLA"),ZCURINI,ZCURDIR)
IF aTEC[1]=.T.
   SELF:SERVER:FIELDPUT("INSTRU",aTEC[2])	
ENDIF			

METHOD PEGINS( ) 
LOCAL aTEC AS ARRAY	
aTEC:=PEGMP04(SELF:SERVER:FIELDGET("NINSTU"),ZCURINI,ZCURDIR,{zMES,zANO,ZEMPRESA})
IF aTEC[1]=.T.
   SELF:SERVER:FIELDPUT("INSTRU",aTEC[2])	
ENDIF		

METHOD ComboPEGMP05() 
RETU PEGCOMBO("MP05.DBF","DESCRI","CODIGO")

METHOD PEGSOL( ) 
LOCAL aTEC AS ARRAY	
aTEC:=PEGMP04(SELF:SERVER:FIELDGET("NUMSOL"),ZCURINI,ZCURDIR,{zMES,zANO,ZEMPRESA})
IF aTEC[1]=.T.
   SELF:SERVER:FIELDPUT("NOMSOL",aTEC[2])	
ENDIF		

METHOD porcurso( ) 
	   SELF:SERVER:SETORDER(2)

METHOD pornumero( ) 
SELF:KeyFind()

METHOD PostInit() 
   SELF:RegisterTimer(300,FALSE)
   FabCenterWindow( SELF )
 RETURN SELF

METHOD PROXIMO 
SELF:oSFJPTI:Browser:SuspendUpdate()
IF SELF:oSFJPTI:Server:Eof
   SELF:oSFJPTI:SkipNext()
ENDIF
SELF:oSFJPTI:Browser:RestoreUpdate()

METHOD Timer() 
   SELF:SERVER:COMMIT()
   SELF:oSFJPTI:Server:COMMIT()



END CLASS
